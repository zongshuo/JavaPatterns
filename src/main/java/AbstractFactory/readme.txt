抽象工厂模式（配套）
    该模式与工厂方法模式基本一样，只是由返回一个对象变成了返回一系列相互依赖的对象。
    该模式让用户不必知道对象之间如何关联的，适合用户与对象间形成紧耦合。
    当系统准备为用户提供一系列相关的对象，又不想让用户代码和创建这些对象的类形成耦合时，
    就可以使用抽象工厂方法。
    该模式实现的关键是在一个抽象类中定义若干个抽象方法，分别返回某个类的实例。
    子类重写方法为用户提供一系列相关的对象。
优缺点：
    1、抽象工厂模式具有工厂方法模式的所有优点
    2、可以在类的内部对产品族进行约束。对产品族的关联关系进行定义和描述，不用引入专门的类进行管理。
    3、缺点是对产品族的扩展会十分费力，增加产品的时候所有工厂都需要修改。
    4、增加了设计时对产品等级结构划分所需的精力。
模式角色:
    1、抽象产品：一个或多个抽象类或接口，负责定义产品必须实现的方法。
    2、具体产品：是抽象产品的具体实现。
    3、抽象工厂：负责定义若干个抽象方法，返回不同的抽象产品。
    4、具体工厂：抽象产品的具体实现，实现抽象方法返回具体产品的实例。
使用场景：
    1、系统需要为用户提供多个对象，但是不希望用户与这些对象产生耦合
    2、系统需要为用户提供多个相关的对象，但不希望用户来决定这些对象如何关联。
    3、系统需要为用户提供一系列对象，但只希望用户知道这些对象有哪些方法可用，不需要用户知道对象的创建过程。
